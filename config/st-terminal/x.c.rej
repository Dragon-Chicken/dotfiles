--- x.c
+++ x.c
@@ -16,7 +16,6 @@
 #include <X11/XKBlib.h>
 
 #include "arg.h"
-#include "compat.h"
 
 #define Glyph Glyph_
 #define Font Font_
@@ -1385,101 +1384,14 @@ xsettitle(char *p)
 }
 
 void
-delete_image(ImageList *im)
-{
-	if (im->prev)
-		im->prev->next = im->next;
-	else
-		term.images = im->next;
-	if (im->next)
-		im->next->prev = im->prev;
-	if (im->pixmap)
-		XFreePixmap(xw.dpy, (Drawable)im->pixmap);
-	free(im->pixels);
-	free(im);
-}
-
-void
 draw(void)
 {
-	ImageList *im;
-	int x, y;
-	int n = 0;
-	int nlimit = 256;
-	XRectangle *rects = NULL;
-	XGCValues gcvalues;
-	GC gc;
-
 	drawregion(0, 0, term.col, term.row);
-	for (im = term.images; im; im = im->next) {
-		if (im->should_delete) {
-			delete_image(im);
-			continue;
-		}
-		if (!im->pixmap) {
-			im->pixmap = (void *)XCreatePixmap(xw.dpy, xw.win, im->width, im->height, DefaultDepth(xw.dpy, xw.scr));
-			XImage ximage = {
-				.format = ZPixmap,
-				.data = (char *)im->pixels,
-				.width = im->width,
-				.height = im->height,
-				.xoffset = 0,
-				.byte_order = LSBFirst,
-				.bitmap_bit_order = MSBFirst,
-				.bits_per_pixel = 32,
-				.bytes_per_line = im->width * 4,
-				.bitmap_unit = 32,
-				.bitmap_pad = 32,
-				.depth = 24
-			};
-			XPutImage(xw.dpy, (Drawable)im->pixmap, dc.gc, &ximage, 0, 0, 0, 0, im->width, im->height);
-			free(im->pixels);
-			im->pixels = NULL;
-		}
-		n = 0;
-		memset(&gcvalues, 0, sizeof(gcvalues));
-		gc = XCreateGC(xw.dpy, xw.win, 0, &gcvalues);
-		for (y = im->y; y < im->y + (im->height+win.ch-1)/win.ch; y++) {
-			if (y >= 0 && y < term.row) {
-				for (x = im->x; x < im->x + (im->width+win.cw-1)/win.cw; x++) {
-					if (!rects)
-						rects = xmalloc(sizeof(XRectangle) * nlimit);
-					if (term.line[y][x].mode & ATTR_SIXEL) {
-						if (n > 0 && rects[n-1].x+rects[n-1].width == borderpx+x*win.cw && rects[n-1].y == borderpx+y*win.ch) {
-							rects[n-1].width += win.cw;
-						} else {
-							rects[n].x = borderpx+x*win.cw;
-							rects[n].y = borderpx+y*win.ch;
-							rects[n].width = win.cw;
-							rects[n].height = win.ch;
-							if (++n == nlimit && (rects = realloc(rects, sizeof(XRectangle) * (nlimit *= 2))) == NULL)
-								die("Out of memory\n");
-						}
-					}
-				}
-			}
-			if (n > 1 && rects[n-2].x == rects[n-1].x && rects[n-2].width == rects[n-1].width) {
-				if (rects[n-2].y+rects[n-2].height == rects[n-1].y) {
-					rects[n-2].height += win.ch;
-					n--;
-				}
-			}
-		}
-		if (n == 0) {
-			delete_image(im);
-			continue;
-		}
-		if (n > 1)
-			XSetClipRectangles(xw.dpy, gc, 0, 0, rects, n, YXSorted);
-		XCopyArea(xw.dpy, (Drawable)im->pixmap, xw.buf, gc, 0, 0, im->width, im->height, borderpx + im->x * win.cw, borderpx + im->y * win.ch);
-		XFreeGC(xw.dpy, gc);
-	}
 	XCopyArea(xw.dpy, xw.buf, xw.win, dc.gc, 0, 0, win.w,
 			win.h, 0, 0);
 	XSetForeground(xw.dpy, dc.gc,
 			dc.col[IS_SET(MODE_REVERSE)?
 				defaultfg : defaultbg].pixel);
-	free(rects);
 }
 
 void
